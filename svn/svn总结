SVN：
 1、Subversion,是一个自由、开源的版本控制系统，一组文件存放在中心版本库，记录每一次文件和目录的修改，svn允许把数据恢复到早期前本，或是检查数据修改的历史，svn可以通过网络访问它的版本库，从而使用户在不同的电脑进行操作。
 2、svn checkOut项目文件：将svn仓库的代码考到本地
		url of repository:从服务器上检出,（版本库的目录地址）
		Checkout drectory :到这个目录下
		
 3、update：通过其获得svn最新的代码
 4、commit：通过其提交代码到svn服务器，记得先update 再commit。
 5、绿色对勾：表示svn 状态正常
 6、红色！：检出到本地后，开始编辑一个文件之后，状态就变成已修改，且需要提交
 7、黄色！：在提交的过程中出现冲突
 8、蓝色+：有一个文件或者目录已经被计划加入到版本控制中
 9、蓝色？：只存在本地中，和版本库没有关系，通过添加，变成蓝色+，再提交到服务器，变成绿色对号。
 10、新增一个文档：结合9、8（先在本地新建一个，再添加到版本库）
 11、删除一个文档：
		a.如果被删除的文件还未入版本库，则可以直接使用操作系统的删除操作删除该文件。
		
		b. 如果被删除的文件已入版本库，则删除的方法如下：
			1)选择被删除文件，右键svn菜单执行”delete”操作，然后选择被删除文件的父目录，右键svn菜单执行”SVN Commit”.
			2)使用操作系统的删除操作删除该文件，然后选择被删除文件的父目录，右键svn菜单执行”SVN Commit”,在变更列表中选择被删除的文件。
 12、改名：
	 修改文件名，选中需要重命名的文件或文件夹，然后右键“TortoiseSVNàRename“，在弹出的对话框中输入新名称，点击”ok”按钮，并将修改文件名后的文件或文件夹通过 “SVN Commit”提交到SVN服务器上。

 13、SVN还原（SVN Revert）
    右击想要回退的文件或者文件夹，在TortoiseSVN弹出菜单中选择”Update to reversion…” 然后会弹出一个窗口,窗口中Revision选项，比如说我们要回退到第10个版本只需要在Revision中填写相应的版本号，然后点击ok即可。

 14、检查更新(Check for modifications)
     此功能可以显示你所做的修改有哪些还没有提交的，此功能不光能看到对文件的修改变化，所有的变化都能看到，包括增加文件或者目录，删除文件或者目录，移动文件或者目录等，如果你点击了检查版本库，那你还可以看到版本库里的改动，既别人提交了哪些文件的改动，你还没更新到本地	
 
 15、SVN更新（SVN Update）
     更新本地代码与SVN服务器上最新的版本一致，只要在需要更新的文件夹上点击右键或者在文件下空白处点击右键，选择”SVN Update” (获取指定版本中的内容，点击右键执行SVN菜单中的“Update to reversion“)，就可以了。
	 
 16、显示日志(Show log)
       通过此功能可以查到谁，什么时候，对那个目录下的那些文件进行了那些操作

 17、解决冲突文件：
	方法一：使用revert(回滚)操作，该操作表示用户放弃自己的更新代码，然后直接提交，这个时候你的代码就会使服务器上最新的代码，即A用户提交的新代码，你的代码不会被提交。
	之后我自己更新的代码需要自己动手复制进去即可提交commit
	方法二：选择文件->右键Editconficts：这种方法需要冲突双方经过协商之后将代码更改统一之后再提交。不仅解决了冲突而且还保证了代码是正确的，因为只有一方的代码被提交.
	红色的部分是冲突代码：theirs表示当前服务器端最新的代码，Mine表示自己修改后的代码，Merged表示合并后的代码。点击红色后右键选择：use this text block就可以将该部分代码作为合并后的代码
	
	想要还原之前的代码也很容易：
		选择文件->右键选择show-log在这里面你可以看见之前提交的所有版本，找到你想要恢复的版本右键选择revert to this version 就可以恢复了.
 